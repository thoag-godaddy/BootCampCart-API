version: '3.8'

networks:
  bootcamp:

volumes:
  postgresdb:

services:
  db:
    image: postgres:12.0-alpine
    ports:
      - 5432:5432
    volumes:
      - postgresdb:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_USER: bootcamp
      POSTGRES_PASSWORD: bootcamp
      POSTGRES_DB: bootcamp
    networks:
      - bootcamp

  api:
    restart: always
    build:
      dockerfile: Dockerfile
      context: .
      args:
        API_PORT: ${API_PORT-8000}
    ports:
      - ${API_PORT-8000}:${API_PORT-8000}
    volumes:
      - ./swagger:/swagger
      - ./cart_api:/cart_api
      - ./diagrams:/diagrams
    environment:
      API_PORT: ${API_PORT-8000}
      POSTGRES_USER: bootcamp
      POSTGRES_PASSWORD: bootcamp
      POSTGRES_DB: bootcamp
      POSTGRES_HOST: db
      API_CLEAR_DB: ${API_CLEAR_DB}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${API_PORT-8000}/heartbeat"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - bootcamp
    depends_on:
      db:
        condition: service_healthy

  tests:
    restart: always
    build:
      dockerfile: Dockerfile
      context: .
    volumes:
      - ./:/cart_api
    environment:
      API_PORT: ${API_PORT-8000}
      POSTGRES_USER: bootcamp
      POSTGRES_PASSWORD: bootcamp
      POSTGRES_DB: bootcamp
      POSTGRES_HOST: db
      API_PORT: "${API_PORT-8000}"
      API_HOST: api
    command: >  # another way of defining commands
      bash -c "coverage run --source cart_api -m pytest -rA /cart_api && coverage report -m"
    depends_on:
      api:
        condition: service_healthy
    networks:
      - bootcamp
